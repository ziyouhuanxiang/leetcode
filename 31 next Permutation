
实现获取下一个排列函数，这个算法需要将数字重新排列成字典序中数字更大的排列。

如果不存在更大的排列，则重新将数字排列成最小的排列（即升序排列）。

修改必须是原地的，不开辟额外的内存空间。

这是一些例子，输入位于左侧列，其相应输出位于右侧列。
1,2,3 → 1,3,2
3,2,1 → 1,2,3
1,1,5 → 1,5,1

class Solution:
    def nextPermutation(self, nums):
        """
        :type nums: List[int]
        :rtype: void Do not return anything, modify nums in-place instead.
        1 4 3 2 1
        """
        le = len(nums)
        i=le-1
        while i>0 and nums[i]<=nums[i-1]: 
            i-=1
        if i>0 :
            j=le-1
            while nums[j]<=nums[i-1]:
                j-=1
            tmp=nums[j]
            nums[j]=nums[i-1]
            nums[i-1]=tmp
        j=le-1
        while i<j:
            tmp=nums[i]
            nums[i]=nums[j]
            nums[j]=tmp
            i+=1
            j-=1
