Given a sorted array, remove the duplicates in-place such that each element appear only once and return the new length.

Do not allocate extra space for another array, you must do this by modifying the input array in-place with O(1) extra memory.

Example:

Given nums = [1,1,2],

Your function should return length = 2, with the first two elements of nums being 1 and 2 respectively.
It doesn't matter what you leave beyond the new length.

给你一个排序的数组，移除所有重复元素并返回这个新数组的长度

int removeDuplicates(int* nums, int numsSize) {
    if(numsSize == 0){
        return 0;    
    }
    int len=1;
    for(int i=1 ; i<numsSize; i++){
        if(nums[i-1]!=nums[i])
        {
            nums[len++]=nums[i];  
        } 
    }
    return len;
    
}

解题思路很简单，一个参数用来存放长度，当发现a[i-1]!=a[i]的时候 a[len++]=a[i]
