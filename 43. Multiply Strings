class Solution:
    def add(self,str1,str2):
        op=0
        ret=""
        if len(str1)<len(str2):
            str1,str2=str2,str1
        for i in range(len(str1)):
            if i<len(str2):
                tmp=op+(int(str1[i])+int(str2[i]))
            else:
                tmp = op+int(str1[i])
            ret+=str( int(tmp)%10)
            op=int(tmp/10)
            
        if op !=0:
            ret+=str(op)
        return ret
    
    def multiply_ch(self, str1, ch):
        ret = ""
        op = 0
        for ch1 in str1:
            tmp = op+int(ch1) * int(ch)
            ret+=str( (tmp)%10) 
            op = int(tmp/10)
        if op != 0:
            ret+=str(op)
       
        return ret
        
    def multiply(self, num1, num2):
        """
        :type num1: str
        :type num2: str
        :rtype: str
        """
        num1 = num1[::-1]
        num2 = num2[::-1]
        ret = "0"
        zero = ""
        if len(num1) > len(num2):
            num1,num2=num2,num1
        
        for i in range(len(num1)):
            if num1[i]!='0':
                tmp = self.multiply_ch(num2,num1[i])
                ret = self.add(ret,zero+tmp)
            zero += str(0)
        ret = ret[::-1]
        return ret     
            
 主要对问题进行分解 按照乘法
 1 按位乘
 2 相加
 其中为了简化字符串相乘的问题，将字符串进行反转，小位在前，计算后再进行反转
        
