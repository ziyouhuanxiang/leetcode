/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
bool hasCycle(struct ListNode *head) {
    struct ListNode * p,*q;
    p = q = head;
    if(head == NULL){
        return false;
    }else{
        q= q->next;
    }
    while(q!= NULL){
        if(q==p)
            return true;
        if(q->next!= NULL){
            if(q->next == p)
                return true;
            q = q->next->next;
        }
        else{
            return false;
        }
        p = p->next;
        
    }
    return false;
}

一开始我也没想好，
一个是正常速度p 一个是二倍速度q
那么不管循环是技术个还是偶数个，则一定会出现p==q 或者q->next ==p这两种情况的一种
