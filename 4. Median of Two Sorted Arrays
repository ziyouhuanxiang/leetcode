
nums1 = [1, 3]
nums2 = [2]
The median is 2.0


nums1 = [1, 2]
nums2 = [3, 4]

The median is (2 + 3)/2 = 2.5

求两个数组中中位数，如果是偶数个则求的是两个数的平均数。
一种方法就是将两个数组合并成一个，然后求中位数
实际上就是使用归并排序最后一趟的思路进行合并
1 如果两个数组相加为偶数个，或奇数个如何处理
double findMedianSortedArrays(int* nums1, int nums1Size, int* nums2, int nums2Size) {
    int len = nums1Size+nums2Size;
    int *nums= (int*)malloc(sizeof(int)*(len));
    int i=0,j=0;
    for(int index=0; index<len; index++){
        if(i==nums1Size)
        {
            nums[index]= nums2[j++];
        }else  if(j==nums2Size)
        {
            nums[index]= nums1[i++];
        }
        else
        {
           nums[index]=nums1[i]>nums2[j]?nums2[j++]:nums1[i++];         
        }

    }
    if(len%2==0)
    {
        return (nums[len/2]+nums[(len-1)/2])/2.0;
    }
    else
    {
        return nums[len/2]/1.0;
    }
}
但是如果只是求中位数的话 并不需要吧所有的都排完序，比如排序到一半或一半加1就ok了
但是算法复杂度O(N)并不符合要求，所以需要





