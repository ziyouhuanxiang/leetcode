Write a bash script to calculate the frequency of each word in a text file words.txt.

For simplicity sake, you may assume:

words.txt contains only lowercase characters and space ' ' characters.
Each word must consist of lowercase characters only.
Words are separated by one or more whitespace characters.
For example, assume that words.txt has the following content:

the day is sunny the the
the sunny is is
Your script should output the following, sorted by descending frequency:
the 4
is 3
sunny 2
day 1


# Read from the file words.txt and output the word frequency list to stdout.
cat words.txt  | sed  "s/[ ][ ]*/\n/g" | sed "/^[ ]*$/d" |sort | uniq -c |  sort -k1 -r |awk '{print $2,$1}'


sed  "s/[ ][ ]*/\n/g"  -------------匹配连续的空格，并使用换行代替 
 sed "/^[ ]*$/d"    ----------------匹配到空格组成的空行 删除
 sort  对删除了空行的进行排序
 uniq -c  对排好序的单词进行去重并显示每个的重复个数
 sort -k1 -r  根据第一行进行从大到小的排序 -r 是从大到排序 去掉-r 从小到大排序 -k[n] 按照第n列进行排序
 
 awk '{print $2,$1}' 因为前面排序的第一列是数字 第二列是字符 不符合要求  所以交换两列
 
 
 
