
Given two strings s and t, write a function to determine if t is an anagram of s.

For example,
s = "anagram", t = "nagaram", return true.
s = "rat", t = "car", return false.

Note:
You may assume the string contains only lowercase alphabets.

Follow up:
What if the inputs contain unicode characters? How would you adapt your solution to such case?


bool isAnagram(char* s, char* t) {
    int dict[256] = {0};
    int i=0;
    while(s[i] != '\0'){
        dict[s[i]-0]++;
        i++;
    }
    int j=0;
    for( j=0; t[j]!= '\0'; j++){
        if(dict[t[j]-0]==0)
            return false;
        else{
            dict[t[j]-0]--;
        }
    }

    for(int i=0; i<256; i++){
        if(dict[i] !=0)
            return false;
    }
    return true;
    
    
}
